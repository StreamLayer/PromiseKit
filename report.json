{"identifiers":["Promise","PMKFinalizer","__AnyPromise","PMKConfiguration","Resolver","Result","LogEvent","PMKError","CatchPolicy","CancellableError","conf","PMKNamespacer","Thenable","CatchMixin","Guarantee"],"products":["PromiseKit"],"prefix":"SLR_","fnReplace":[{"signature":"(execute body: () throws -> U) -> Promise<U.T> ","identifier":"firstly"},{"signature":"(_ thenables: [U]) -> Promise<U.T> ","identifier":"race"},{"signature":"(resolved promises: Promise<T>...) -> Guarantee<[Result<T>]> ","identifier":"when"},{"signature":"(resolved promises: [Promise<T>]) -> Guarantee<[Result<T>]> ","identifier":"when"},{"signature":"(execute body: () -> Guarantee<T>) -> Guarantee<T> ","identifier":"firstly"},{"signature":"(_ body: (@escaping (Error?) -> Void) throws -> Void) -> Promise<Void> ","identifier":"wrap"},{"signature":"(_ body: (@escaping (Error?, T?) -> Void) throws -> Void) -> Promise<T> ","identifier":"wrap"},{"signature":"(_ guarantees: Guarantee<Void>...) -> Guarantee<Void> ","identifier":"when"},{"signature":"(fulfilled thenables: [U]) -> Promise<[U.T]> ","identifier":"when"},{"signature":"(_ body: (@escaping (T, Error?) -> Void) throws -> Void) -> Promise<T>  ","identifier":"wrap"},{"signature":"(_ body: (@escaping (T?, Error?) -> Void) throws -> Void) -> Promise<T> ","identifier":"wrap"},{"signature":"(_ interval: DispatchTimeInterval) -> Guarantee<Void> ","identifier":"after"},{"signature":"(_ promise: Promise<T>) throws -> T ","identifier":"hang"},{"signature":"(fulfilled promiseIterator: It, concurrently: Int) -> Promise<[It.Element.T]> ","identifier":"when"},{"signature":"(_ thenables: U...) -> Promise<U.T> ","identifier":"race"},{"signature":"(fulfilled pu: U, _ pv: V, _ pw: W) -> Promise<(U.T, V.T, W.T)> ","identifier":"when"},{"signature":"(guarantees: [Guarantee<Void>]) -> Guarantee<Void> ","identifier":"when"},{"signature":"(_ body: (@escaping (T) -> Void) throws -> Void) -> Promise<T> ","identifier":"wrap"},{"signature":"(seconds: TimeInterval) -> Guarantee<Void> ","identifier":"after"},{"signature":"(fulfilled pu: U, _ pv: V, _ pw: W, _ px: X) -> Promise<(U.T, V.T, W.T, X.T)> ","identifier":"when"},{"signature":"(fulfilled promises: [U]) -> Promise<Void> ","identifier":"when"},{"signature":"(_ guarantees: Guarantee<T>...) -> Guarantee<T> ","identifier":"race"},{"signature":"(fulfilled pu: U, _ pv: V) -> Promise<(U.T, V.T)> ","identifier":"when"},{"signature":"(fulfilled promises: U...) -> Promise<Void> ","identifier":"when"},{"signature":"(fulfilled pu: U, _ pv: V, _ pw: W, _ px: X, _ py: Y) -> Promise<(U.T, V.T, W.T, X.T, Y.T)> ","identifier":"when"}]}